Y2=CS[HDS$ts]
Y2=DS[HDS$ts]
Y2=DS[HDS$ts,]
Y2
Y=S[H$ts]
Y
26
15/26
18.54-10.54
16.3-8
str(db)
v=vector("list",4)
v
1/0
log(-1)
as.numeric("ola")
setwd("~/AULAS/EGI/AID/Projeto")
knitr::opts_chunk$set(echo = TRUE)
library(openxlsx)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
library(datasets)
library(caTools)
#univariado stella
library(Metrics)
install.packages("Metrics")
#univariado stella
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
stella= db[,5] #seleciona apenas a coluna nr 5, a stella
L=length(stella)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(stella,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=stella[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree" , task='reg')
#fit: ajusta o modelo selecionado
#mlpe: conjunto de perceptrons multicamadas
#d[hd$tr,] -> os primeiros exemplos são usados como dados de treino
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
#RollingWindow
timelags=c(1,7,8)
D=CasesSeries(stella,timelags)
S=7
Runs=20
Test=7
trinit=hd$tr
W=(L-Test)-(Runs-1)*S
W2=W-max(timelags)
YR=diff(range(stella))
ev2=vector(length=Runs)
ev=vector(length=Runs)
for(b in 1:Runs)
{
hd1=houldout(D$y,ratio=NTS,mode="incremental",iter=b,window=W2,increment=S)
trinit=hd1$tr
M2=fit(y~.,D[hd1$tr,],model="ctree")
Pred2=lforecast(M2,D,star=(length(hd1$tr)+1),Test)
ev2[b]=mmetric(y=stella[hd1$ts],x=Pred2,metric="NMAE",val=YR)
cat("iter:",b,"TR from:",trinit,"to:",(trinit+length(hd1$tr)-1),"size:",length(hd1$tr),"TS from:" ,hd1$ts[1],"to:",hd1$ts[length(hd1$ts)],"size:",length(hd1$ts),"nmae:",ev[b],",",ev2[b],"\n")
mgraph(stella[hd$ts],Pred,graph="REG",Grid=10,col=c("black","blue","red"),leg=list(pos="topleft",leg=c("target","HWpred.","ctree")))
lines(Pred2.pch=19,cex=0.5,type="b",col="red")
}
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
summary(d)
hd$tr
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
try(numeric("a"))
numeric("a")
EXEC=try(numeric("a")),silent=TRUE)
EXEC=try(numeric("a"),silent=TRUE)
EXEC
clas(EXEC)
class(EXEC)
EXEC=try(numeric("a"),silent=TRUE)
EXEC1=try(numeric(1),silent=TRUE)
EXEC2=try(numeric("a"),silent=TRUE)
class(EXEC1)
class(EXEC2)
setwd("~/AULAS/EGI/AID/Session3-forecast/Rseries")
source("~/AULAS/EGI/AID/Session3-forecast/Rseries/2-sunspots.R")
length(5000-40:5000)
length((5000-40):5000)
length((5000-39):5000)
5000-39
268*2
1.31/21.55
0.95/15.74
0.25/4.35
0.35/5.6
12/10
10*0.2
5*4
20*40+15+5
2*40+15+5
