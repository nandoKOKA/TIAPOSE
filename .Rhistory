mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
#univariado bud
library(Metrics)
library(openxlsx)
library(rminer)
library(forecast)
db=read.xlsx(xlsxFile="bebidas.xlsx",sheet=1,skipEmptyRows=FALSE,colNames=TRUE,detectDates=TRUE)
# notas:
class(db[,1]) # "Date" - R data type that handles dates
summary(db)
bud= db[,6] #seleciona apenas a coluna nr 6, a bud
L=length(bud)
NTS=7 #nr previsões
H=NTS # 1 a H previsões
tr=ts(db,frequency=7,start=1,end=L-H) #série temporal (diário)
NTS= 7        #nr previsões
d=CasesSeries(bud,c(1,7,8))
hd=holdout(d$y,ratio=NTS,mode="order")
y=bud[hd$ts]
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
#fit: ajusta o modelo selecionado
#from 1 to H=7 ahead forecasts
Pred=lforecast(NN,d,start= hd$ts[1],horizon=NTS)
mgraph(y,Pred,graph="REG",Grid=10,col=c("black","blue"), leg=list(pos="topleft",leg=c("target","predictions")))
mae(y,Pred)
mae(y, Pred)/mean(y)
mape(y, Pred)
mse(y,Pred)
rmse(y,Pred)
summary(d)
hd$tr
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
NN=fit(y~.,d[hd$tr,],model="ctree", task='reg')
try(numeric("a"))
numeric("a")
EXEC=try(numeric("a")),silent=TRUE)
EXEC=try(numeric("a"),silent=TRUE)
EXEC
clas(EXEC)
class(EXEC)
EXEC=try(numeric("a"),silent=TRUE)
EXEC1=try(numeric(1),silent=TRUE)
EXEC2=try(numeric("a"),silent=TRUE)
class(EXEC1)
class(EXEC2)
setwd("~/AULAS/EGI/AID/Session3-forecast/Rseries")
source("~/AULAS/EGI/AID/Session3-forecast/Rseries/2-sunspots.R")
length(5000-40:5000)
length((5000-40):5000)
length((5000-39):5000)
5000-39
268*2
1.31/21.55
0.95/15.74
0.25/4.35
0.35/5.6
12/10
10*0.2
5*4
20*40+15+5
2*40+15+5
help(rminer)
help("??rminer")
help(rminer)
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("ML.R")
library(readxl)
bebidas <- read_excel("bebidas.xlsx")
View(bebidas)
source("ML.R")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("ML.R")
View(bebidas)
typeof(bebidas)
typeof(bebidas)
typeof(bebidas)
TS <- ts(bebidas[,5])
source("ML")
bebidas <- read_excel("C:/Users/Miguel Rebelo/Desktop/Projeto_HW/bebidas.xlsx")
typeof(bebidas)
bebidas <- ts(bebidas[,5])
d1=read.table("bebidas.ts",header=TRUE,sep=";")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("ML.R")
source("ML.R")
bebidas <- read_excel("C:/Users/Miguel Rebelo/Desktop/Projeto_HW/bebidas.xlsx")
d1=read.table("bebidas.ts",header=TRUE,sep=";")
bebidas <- read_excel("C:/Users/Miguel Rebelo/Desktop/Projeto_HW/bebidas.xlsx")
TS <- ts(bebidas[,5])
d1= TS  # vector of numeric
source("ML.R")
source("ML")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML")
source("ML.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
souce("ML_NAIVE.R")
source("ML_NAIVE.R")
source("ML.R")
source("ML_NAIVE.R")
source("ML_NAIVE.R")
View(bebidas)
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("HW_AR_ETS.R")
source("ML")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("ML.R")
source("ML.R")
View(bebidas)
source("Pred_TimeSeries.R")
source("Pred_TimeSeries.R")
source("Pred_TimeSeries.R")
source("Pred_TimeSeries.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
print(NN)
print(NN)
source("ML.R")
source("ML.R")
source("ML.R")
source("ML.R")
typeof(NN)
PRINT(NN)
print(NN)
source("ML.R")
source("ML.R")
source("ML.R")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("ML_RW.R")
source("Bivariada.R.R")
source("Bivariada.R")
source("Bivariada.R")
source("5-multi.R")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("5-multi.R")
print(Canada)
source("Bivariada.R")
print(bebidas)
typeof(bebidas)
source("Bivariada.R")
source("Bivariada.R")
source("Bivariada.R")
setwd("C:/Users/Miguel Rebelo/Desktop/Projeto_HW")
source("Bivariada.R")
source("Bivariada.R")
View(bebidas)
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")4
source("Weekly_Naive.R")4
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")7
source("Weekly_Naive.R")7
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Weekly_Naive.R")
source("Otimização/Optim.R")
source("Otimização/Optim.R")
source("Otimização/Optim.R")
source("Otimização/Optim.R")
source("Otimização/Optim.R")
source("Otimização/Optim.R")
